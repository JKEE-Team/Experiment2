package UI;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.commons.fileupload.FileItem;

import org.apache.tomcat.util.http.fileupload.RequestContext;

//import org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
//import org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload;

import java.io.File;

import java.io.IOException;
import context.WebContext;
import annotation.Controller;
import annotation.RequestMapping;
import view.View;

@Controller
public class UploadUI {
	private static final long serialVersionUID = 1L;
    
    // 上传文件存储目录
    private static final String UPLOAD_DIRECTORY = "uploadFiles";
 
    // 上传配置
    private static final int MEMORY_THRESHOLD   = 1024 * 1024 * 3;  // 3MB
    private static final int MAX_FILE_SIZE      = 1024 * 1024 * 40; // 40MB
    private static final int MAX_REQUEST_SIZE   = 1024 * 1024 * 50; // 50MB
    
    //使用RequestMapping注解指明forward1方法的访问路径
    @RequestMapping("UploadUI/Uploadf")
    public View fileUpload() throws IOException {
    	System.out.println("map succeed");
    	HttpServletRequest request = WebContext.requestHodler.get();
    	HttpServletResponse response = WebContext.responseHodler.get();
    	if (!ServletFileUpload.isMultipartContent(request)) {
            // 如果不是则停止
//            PrintWriter writer = response.getWriter();
//            writer.println("Error: 表单必须包含 enctype=multipart/form-data");
//            writer.flush();
            return new View("/upload.jsp");
        }
    	System.out.println("get form data!");
    	// 配置上传参数
        DiskFileItemFactory factory = new DiskFileItemFactory();
        // 设置内存临界值 - 超过后将产生临时文件并存储于临时目录中
        factory.setSizeThreshold(MEMORY_THRESHOLD);
        // 设置临时存储目录
        factory.setRepository(new File(System.getProperty("java.io.tmpdir")));
        ServletFileUpload upload = new ServletFileUpload(factory);    
        // 设置最大文件上传值
        upload.setFileSizeMax(MAX_FILE_SIZE);     
        // 设置最大请求值 (包含文件和表单数据)
        upload.setSizeMax(MAX_REQUEST_SIZE);
        // 中文处理
        upload.setHeaderEncoding("UTF-8"); 
        // 构造临时路径来存储上传的文件
        // 这个路径相对当前应用的目录
//        String uploadPath = request.getServletContext().getRealPath("./")  + UPLOAD_DIRECTORY;
        String uploadPath = "C:\\Users\\ASUS\\Desktop\\大三上\\Java企业级应用\\实验\\实验2\\代码工程2\\spring_mvc_v1\\" +UPLOAD_DIRECTORY;
        System.out.print("uploadpath: ");
        System.out.println(uploadPath);//D:\\Program\\Javap\\spring_mvc_v0\\
        String msg = "";
        // 如果目录不存在则创建
        File uploadDir = new File(uploadPath);
        if (!uploadDir.exists()) {
        	System.out.println("创建目录成功");
            uploadDir.mkdir();
        }
        
        try {
            // 解析请求的内容提取文件数据

            List<FileItem> formItems = upload.parseRequest(request);
            System.out.println("读取文件... ");
            if (formItems != null && formItems.size() > 0) {
                // 迭代表单数据
            	System.out.println("读取表单成功！ ");
                for (FileItem item : formItems) {
                    // 处理不在表单中的字段
                    if (!item.isFormField()) {
                        String fileName = new File(item.getName()).getName();
                        String filePath = uploadPath + File.separator + fileName;
                        File storeFile = new File(filePath);
                        // 在控制台输出文件的上传路径
                        System.out.println(filePath);
                        // 保存文件到硬盘
                        item.write(storeFile);
                        msg = "文件上传成功,"+"保存路径: "+uploadPath;
                    }
                }
            }
            System.out.println("文件为空！ ");
        } catch (Exception ex) {
        	 msg = "错误信息: " + ex.getMessage();
        }
        // 跳转到 message.jsp
        
        return new View("/upload.jsp","msg",msg);
    	
    }

}
